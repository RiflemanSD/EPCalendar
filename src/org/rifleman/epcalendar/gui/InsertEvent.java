
package org.rifleman.epcalendar.gui;

import org.rifleman.epcalendar.EPCalendar;
import org.rifleman.epcalendar.classes.Event;
import org.rifleman.epcalendar.utils.MyUtils;

/**
 *
 * @author rifleman
 */
public class InsertEvent extends javax.swing.JPanel {

    /** Creates new form InsertEvent */
    public InsertEvent() {
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        durationLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        repeatTF = new javax.swing.JTextField();
        repeatLabel = new javax.swing.JLabel();
        weightLabel = new javax.swing.JLabel();
        descLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descTA = new javax.swing.JTextArea();
        weightCB = new javax.swing.JComboBox();
        timePickerFrom = new org.rifleman.epcalendar.gui.TimePickerPanel();
        insertButton = new javax.swing.JButton();
        repeatCB = new javax.swing.JComboBox();
        titleLabel = new javax.swing.JLabel();
        titleTF = new javax.swing.JTextField();
        datePicker = new org.rifleman.epcalendar.gui.DatePicker();
        timePickerTo = new org.rifleman.epcalendar.gui.TimePickerPanel();

        durationLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        durationLabel.setText("Duration");

        dateLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dateLabel.setText("Date");

        repeatTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        repeatLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        repeatLabel.setText("Repeat");

        weightLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        weightLabel.setText("Weight");

        descLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        descLabel.setText("Description");

        descTA.setColumns(20);
        descTA.setRows(5);
        jScrollPane1.setViewportView(descTA);

        weightCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        repeatCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hours", "Days", "Months", "Years" }));
        repeatCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeatCBActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        titleLabel.setText("Title");

        titleTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(insertButton)
                        .addGap(149, 189, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(descLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(repeatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(weightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(weightCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(repeatCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(repeatTF))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(datePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(durationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timePickerFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timePickerTo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(titleTF)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(durationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timePickerFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timePickerTo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(repeatCB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(repeatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(repeatTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightCB, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(descLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(insertButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void repeatCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_repeatCBActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        String title = this.titleTF.getText();
        String desc = this.descTA.getText();
        String sdf = this.timePickerFrom.getValue();
        String sdt = this.timePickerTo.getValue();
        String date = this.timePickerFrom.getValue();
        int repeatCB = this.repeatCB.getSelectedIndex();
        String srepeat = this.repeatTF.getText();
        int weight = this.weightCB.getSelectedIndex();
        
        double duration = 0;
        
        long from = MyUtils.getDate(sdf).getTime();
        long to = MyUtils.getDate(sdt).getTime();
        
        if (from > to) {
            duration = from - to;
            duration /= 60000;
        }
        int rTime = 0;
        
        if (!srepeat.isEmpty()) {
            if (repeatCB == 0) {
                // Hours
                // Επαναλάψη κάθε τόσες ώρες (24 ώρες για κάθε μέρα)
                rTime = MyUtils.stringToInt(srepeat);
            }
            else if (repeatCB == 1) {
                // Days
                // Επανάληψη αυτές τις μέρες (ΔΕ, ΤΡ, ΤΕ, ΠΕ, ΠΑ, ΣΑ, ΚΥ)
                // ΔΕ-ΠΑ (από δευτέρα μέχρι παρασκευή
                // ΔΕ (κάθε δευτέρα)
                // ΔΕ-ΤΕ 12:30
                /*
                ΔΕ -1 24*60=1440 = -11440
                ΤΡ -2
                ΤΕ -3
                ΠΕ -4
                ΠΑ -5
                ΣΑ -6
                ΚΥ -7
                ΔΕ-ΤΕ 12:30  -103 12*60+30 = -103750
                 */
                String[] daysNames = {"ΔΕ", "ΤΡ", "ΤΕ", "ΠΕ", "ΠΑ", "ΣΑ", "ΚΥ"};
                
                String[] s1 = srepeat.split(" ");
                String[] s2 = s1[0].split("-");
                String d;
                if (s2.length == 0) {
                    d = s1[0];
                }
                else {
                    d = "-" + this.dayNameToInt(s2[0], daysNames) + "0" + this.dayNameToInt(s2[1], daysNames);
                }
                
                String n = d + this.shoursToMinutes(s1[1]) + "";
                
                System.out.println(n + ", " + MyUtils.stringToInt(n));
                
            }
            else if (repeatCB == 2) {
                // Months
                // Επανάληψη αυτόν τον μήνα ή κάθε πρώτη του μηνός ?
                // Επανάληψη τον μήνα : 13 12:30 (Στις 13 κάθε μηνός)
                // Επανάληψε κάθε πρώτη του μηνός ( F = πρώτη ή L = Τελευταία ) F 12
                /*
                -8 01 24*60 = -8011440
                */
                String[] s1 = srepeat.split(" ");
                
                System.out.println(s1[0] + " " + s1[1]);
            }
            else {
                // Year
                // Επανάληψη κάθε χρόνο τάδε του μηνός
                // 1-1 10:00 (1 Ιανουαρίου 10 η ώρα)
                //-9 0101 24*60 = -901011440
                String[] s1 = srepeat.split(" ");
                
                System.out.println(s1[0] + " " + s1[1]);
            }
        }
        
        Event event = new Event(0, title, desc, MyUtils.getDate(date), rTime, weight, false, (int)duration);
        
        System.out.println(title);
        System.out.println(desc);
        System.out.println(date);
        System.out.println(rTime);
        System.out.println(weight);
        System.out.println(duration);
        
        //EPCalendar.database.saveEvent(event);
    }//GEN-LAST:event_insertButtonActionPerformed

    private int dayNameToInt(String day, String[] days) {
        for (int i = 0; i < days.length; i++) {
            if (day.equals(days[i])) {
                return i + 1;
            }
        }
        
        return 0;
    }
    private String intToDayName(int day, String[] days) {
        for (int i = 0; i < days.length; i++) {
            if ((i + 1) == day) return days[i];
        }
        
        return null;
    }
    
    private String minutesToShours(int minutes) {
        int h = minutes/2;
        int m = minutes%2;
        
        return h + ":" + m;
    }
    
    private int shoursToMinutes(String shours) {
        int h,m;
        
        String[] sh = shours.split(":");
        
        if (sh.length == 0) {
            h = MyUtils.stringToInt(shours); if (h < 0) return -1;
            m = 0;
        }
        else {
            h = MyUtils.stringToInt(sh[0]); if (h < 0) return -1;
            m = MyUtils.stringToInt(sh[1]); if (m < 0) return -1;
        }
        
        return h*60 + m;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateLabel;
    private org.rifleman.epcalendar.gui.DatePicker datePicker;
    private javax.swing.JLabel descLabel;
    private javax.swing.JTextArea descTA;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JButton insertButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox repeatCB;
    private javax.swing.JLabel repeatLabel;
    private javax.swing.JTextField repeatTF;
    private org.rifleman.epcalendar.gui.TimePickerPanel timePickerFrom;
    private org.rifleman.epcalendar.gui.TimePickerPanel timePickerTo;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTF;
    private javax.swing.JComboBox weightCB;
    private javax.swing.JLabel weightLabel;
    // End of variables declaration//GEN-END:variables

}
